import { Aegis } from "./aegis";
import { Version } from "./protocol";
import { expect, test } from "vitest";
import { Algorithm } from "./crypt";

test("aegis1", () => {
  // Test case 1
  const key = new Uint8Array([1, 2, 3, 4]);
  const data = new Uint8Array([0]);

  const aegis = new Aegis(Version.V1, 3, 3, [new URL("https://example.com")]);
  aegis.dealShares(Algorithm.NoCryptAlgo, data, key);

  expect(aegis.payloads.length).toEqual(3);
  expect(aegis.payloads[0]).toEqual(
    new Uint8Array([
      123, 34, 112, 114, 111, 116, 111, 99, 111, 108, 95, 118, 101, 114, 115, 105, 111, 110, 34, 58, 34, 86, 49, 34, 44,
      34, 112, 97, 99, 107, 101, 116, 34, 58, 34, 101, 121, 74, 106, 99, 110, 108, 119, 100, 70, 57, 104, 98, 71, 100,
      118, 99, 109, 108, 48, 97, 71, 48, 105, 79, 105, 74, 79, 84, 49, 57, 68, 85, 108, 108, 81, 86, 67, 73, 115, 73,
      110, 78, 111, 89, 88, 74, 108, 88, 51, 66, 104, 89, 50, 116, 108, 100, 67, 73, 54, 73, 109, 78, 69, 90, 70, 100,
      90, 77, 85, 90, 67, 87, 84, 78, 119, 78, 70, 73, 121, 78, 88, 70, 97, 86, 70, 90, 70, 89, 87, 115, 52, 100, 49,
      107, 120, 81, 107, 86, 79, 86, 107, 74, 78, 90, 69, 90, 110, 77, 86, 86, 70, 89, 122, 86, 78, 101, 84, 108, 112,
      86, 49, 99, 53, 83, 87, 69, 119, 84, 84, 82, 80, 82, 85, 112, 122, 87, 110, 111, 119, 80, 83, 74, 57, 34, 125,
    ]),
  );
  expect(aegis.payloads[1]).toEqual(
    new Uint8Array([
      123, 34, 112, 114, 111, 116, 111, 99, 111, 108, 95, 118, 101, 114, 115, 105, 111, 110, 34, 58, 34, 86, 49, 34, 44,
      34, 112, 97, 99, 107, 101, 116, 34, 58, 34, 101, 121, 74, 106, 99, 110, 108, 119, 100, 70, 57, 104, 98, 71, 100,
      118, 99, 109, 108, 48, 97, 71, 48, 105, 79, 105, 74, 79, 84, 49, 57, 68, 85, 108, 108, 81, 86, 67, 73, 115, 73,
      110, 78, 111, 89, 88, 74, 108, 88, 51, 66, 104, 89, 50, 116, 108, 100, 67, 73, 54, 73, 109, 78, 69, 90, 70, 100,
      90, 77, 85, 90, 67, 87, 84, 78, 119, 78, 70, 73, 121, 78, 88, 70, 97, 86, 70, 90, 70, 89, 87, 115, 52, 100, 49,
      107, 120, 81, 107, 86, 79, 86, 107, 74, 78, 90, 69, 90, 110, 77, 86, 86, 70, 89, 122, 86, 78, 101, 84, 108, 112,
      86, 49, 99, 53, 83, 87, 69, 119, 84, 84, 82, 80, 82, 85, 112, 122, 87, 110, 111, 119, 80, 83, 74, 57, 34, 125,
    ]),
  );
  expect(aegis.payloads[2]).toEqual(
    new Uint8Array([
      123, 34, 112, 114, 111, 116, 111, 99, 111, 108, 95, 118, 101, 114, 115, 105, 111, 110, 34, 58, 34, 86, 49, 34, 44,
      34, 112, 97, 99, 107, 101, 116, 34, 58, 34, 101, 121, 74, 106, 99, 110, 108, 119, 100, 70, 57, 104, 98, 71, 100,
      118, 99, 109, 108, 48, 97, 71, 48, 105, 79, 105, 74, 79, 84, 49, 57, 68, 85, 108, 108, 81, 86, 67, 73, 115, 73,
      110, 78, 111, 89, 88, 74, 108, 88, 51, 66, 104, 89, 50, 116, 108, 100, 67, 73, 54, 73, 109, 78, 69, 90, 70, 100,
      90, 77, 85, 90, 67, 87, 84, 78, 119, 78, 70, 73, 121, 78, 88, 70, 97, 86, 70, 90, 70, 89, 87, 115, 52, 100, 49,
      107, 120, 81, 107, 86, 79, 86, 107, 74, 78, 90, 69, 90, 110, 77, 86, 86, 70, 89, 122, 86, 78, 101, 84, 108, 112,
      86, 49, 99, 53, 83, 87, 69, 119, 84, 84, 82, 80, 82, 85, 112, 122, 87, 110, 111, 119, 80, 83, 74, 57, 34, 125,
    ]),
  );

  const aegis2 = new Aegis(Version.V1, 3, 3, [new URL("https://example.com")]);
  aegis2.payloads = aegis.payloads;
  const res = aegis2.combineShares(key);
  expect(res).toEqual(data);
});
